########################################
0-0. Hardware Configuration

10k pot ASD20-12S5

Pin 7  <--GRY--| 10k pot 4.7k 4.75V
Pin 6  <--VIO--|         3.5k 5.25V   |
                                      |  
Pin 5  <--BLK--------------------------

Pin 1 <-- on/off CTRL with Pin 3
Pin 3 <-- -input

Pin 4 <-- +input
########################################
using LXterminal command prompt 
https://www.jeremymorgan.com/tutorials/raspberry-pi/how-to-linux/

0-0. sudo raspi-config
    change timezone
    Advance option screen resolution to default 16:9 1920:1200
    audio
    
0-1. Add username
    https://www.raspberrypi.org/documentation/linux/usage/users.md

0-2. sudo passwd root
0-2. sudo passwd pi
0-3. logout
   
   logout back in as the user 'root' using the password you just created. Now we can rename the the default pi user name. 
The following method renames the user 'pi' to 'newname', replace this with whatever you want. Type the command:

0-4. sudo visudo

0-5. # User privilege specification
     root    ALL=(ALL:ALL) ALL
  
0-6. # User privilege specification
     root    ALL=(ALL:ALL) ALL
     newname ALL=(ALL:ALL) ALL
     newname ALL = NOPASSWD: ALL

https://thepihut.com/blogs/raspberry-pi-tutorials/19668676-renaming-your-raspberry-pi-the-hostname
0-7. Change hostname: sudo nano /etc/hostname
                      change raspberrypi to another name
                      sudo nano /etc/hosts
                      change 127.0.1.1 raspberrypi to another name

0-7. sudo apt-get update

https://www.modmypi.com/blog/how-to-change-the-default-account-username-and-password

######################################## ########################################
1-1. Raspberry Pi Board configuration

#1. %F is equivalent to %Y-%m-%d
    %X is equivalent to %I:%M:%S
%F / %X

#2. %B is full month name. 
    %d day of the month (01-31). 
    %A full weekday name %n a newline
    %s seconds since the Epoch, UTC 
    %V week number of the year 
    %j ay of the year (001-366)
    %z time zone offset from UTC
    %p ante meridiem (AM) or post meridiem (PM)
%B.%d.%A %n%s/%V-%j/%z%p

#2. Timed Shutdown
sudo shutdown –h 21:55

######################################## 
http://www.elinux.org/RPI_vcgencmd_usage

#2. Print the /boot/config.txt configurations
vcgencmd get_config int

#3. Display arm, core, h264, isp, v3d, uart, pwm, emmc, pixel, vec, hdmi, dpi clock frequency
\
for src in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi ; do \
  echo -e "$src:\t$(vcgencmd measure_clock $src)" ; \
done

#4. Display core, sdram_c, sdram_i, sdram_p voltage
\
for id in core sdram_c sdram_i sdram_p ; do \
  echo -e "$id:\t$(vcgencmd measure_volts $id)" ; \
done

########################################
http://elinux.org/RPiconfig

#1. Change screen resolution to avoid flickering or blinking

sudo leafpad /boot/config.txt

sudo /opt/vc/bin/tvservice -s <Show current HDMI state>
sudo /opt/vc/bin/tvservice -m CEA <show aviliable CEA modes>
sudo /opt/vc/bin/tvservice -m DMT <show aviliable DMT modes>
sudo raspi-config
advance mode -> resolution

########################################

#1. Play MP3 file
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install mpg321

#2. display enabled codec
\
for codec in H264 MPG2 WVC1 MPG4 MJPG WMV9 ; do \
  echo -e "$codec:\t$(vcgencmd codec_enabled $codec)" ; \
done

########################################
#1.Change Clock Rate

sudo leafpad /boot/config.txt
#uncomment to overclock the arm. 700 MHz is the default.
#force_turbo=0
#arm_freq_min = 800
#arm_freq = 900
#core_freq = 275
#sdram_freq = 500
or
#force_turbo=0
#over_voltage=6
#arm_freq=800
#arm_freq=930
#core_freq = 350
#sdram_freq = 500

########################################
#1. Print memory is split between the CPU (arm) and GPU

vcgencmd get_mem arm && vcgencmd get_mem gpu

######################################## ########################################
#1. edit screensaver

sudo leafpad /etc/kbd/config
BLANK_TIME=0
BLANK_DPMS=off
POWERDOWN_TIME=0

2. edit screensaver in rasberrypi pixel

sudo nano /etc/xdg/lxsession/LXDE-pi/autostart
@xset s noblank 
@xset s off 
@xset -dpms

######################################## ########################################
http://abyz.co.uk/rpi/pigpio/examples.html#Hardware

1. Troubleshoot GPIO pins and etc

Test GPIO pins
sudo pigpiod
bash gpiotest  <download from http://abyz.co.uk/rpi/pigpio/examples.html#Hardware>

2. Install and run Piscope

wget abyz.co.uk/rpi/pigpio/piscope.tar   

http://www.thegeekstuff.com/2010/04/unix-tar-command-examples/

c – create a uncompressed archive ($ tar cvf archive_name.tar dirname/)
x – extract files from archive (xvfz) ($ tar xvf archive_file.tar /home/pi/dir1/ /home/pi/dir2/)  (2 directories)
v – verbosely list files which are processed
f – following is the archive file name
t - view the tar archive file content without extracting ($ tar tvf archive_name.tar)
z – filter the archive through gzip  ($ tar cvzf archive_name.tar.gz dirname/) create compressed file
j – filter the archive through bzip2 ($ tar -cjf - /directory/to/archive/ | wc -c)
r - add to existing .tar file ($ tar rvf archive_name.tar newfile)
W - verify the archive file that got created ($ tar cvfW file_name.tar dir/)
tar xvf piscope.tar      

cd PISCOPE      
make hf      
make install
killall pigpiod
sudo pigpiod
cd /home/pi/PISCOPE/
./piscope    <run GUI>

######################################## ########################################
http://blog.scphillips.com/posts/2013/01/sound-configuration-on-raspberry-pi-with-alsa/

#1. enable sound through HDMI or 3.5mm audio jackenable sound through HDMI or 3.5mm audio jack
sudo amixer cset numid=3 1 (3.5mm jack)
sudo amixer cset numid=3 2 (HDMI)
      0=auto
      1=headphones
      2=hdm

#2. display graphic controller
alsamixer

#3. reset to default state
sudo /etc/init.d/alsa-utils reset

######################################## ########################################
https://www.maketecheasier.com/write-c-sharp-programs-raspberry-pi/
http://www.mono-project.com/download/#download-lin-debian

#1. Install C# Compiler

#2. Install mono-devel to compile code
sudo apt-get install mono-devel  

#3.Install Mono - C# common runtime .net compiler
sudo apt-get install mono-complete

#4. Install mono debuger to show line number
sudo apt-get install mono-dbg

########################################
Ref:http://www.mono-project.com/download/
Ref:http://www.monodevelop.com/
The package mono-devel should be installed to compile code.

The package mono-complete should be installed to install everything
- this should cover most cases of "assembly not found" errors.

The package mono-dbg should be installed to get debugging symbols for framework libraries
- allowing you to get line numbers in stack traces.

The package referenceassemblies-pcl should be installed for PCL compilation support
- this will resolve most cases of "Framework not installed: .NETPortable" errors during software compilation.

The package ca-certificates-mono should be installed to get SSL certificates for HTTPS connections. 
Install this package if you run into trouble making HTTPS connections.

The package mono-xsp4 should be installed for running ASP.NET applications.

########################################
3-1. Write C# Program in Terminal

3-2. nano /home/pi/hello.cs

/// Write a HelloWorld class
using System;
 
public class HelloWorld
{
    static public void Main ()
    {
        Console.WriteLine ("Hello Make Tech Easier");
    }
}

3-3. mcs hello.cs      <Compile hello.cs to C>

3-4. file hello.exe

3-5. mono hello.exe   <execute .exe file>

3-6. nano hello.cs     <edit hello.cs file>

########################################

 4-1. Write C# GUI Programs 
 
 4-2. sudo apt-get install gtk-sharp2   <Install install the bindings between Mono and GTK>
 
 4-3. nano /home/pi/hellogtk.cs
 
using Gtk;
using System;
 
class Hello {
 
        static void Main()
        {
                Application.Init ();
 
                Window window = new Window ("Hello MTE");
                window.Show();
 
                Application.Run ();
 
        }
}

4-4. mcs hellogtk.cs -pkg:gtk-sharp-2.0   <Using -pkg: flag to access GTK Sharp toolkit (Gtk#) and compile to executable)

4-5. mono hello.exe

########################################
https://packages.debian.org/stable/

#5-1. MonoDevelop enables developers to quickly write desktop and web applications on Linux, Windows and Mac OS X

5-2. sudo apt-get install monodevelop   <Install MonoDevelop>

5-3. sudo apt-get install monodevelop-database  <Database plugin for MonoDevelop>

5-4. sudo apt-get install monodevelop-debugger-gdb  <GNU Debugger plugin for MonoDevelop>

5-5. sudo apt-get install monodevelop-monogame  <Free implementation of XNA - IDE integration >

5-6. sudo apt-get install monodevelop-nunit <NUnit plugin for MonoDevelop>

5-7. sudo apt-get install monodevelop-versioncontrol  <VersionControl plugin for MonoDevelop>

5-8. sudo apt-get install monodevelop-versioncontrol-dbgsym   <Debug symbols for monodevelop-versioncontrol>

######################################## ########################################
https://www.howtogeek.com/142249/how-to-turn-a-raspberry-pi-into-an-always-on-usenet-machine/
www.giganews.com

#6-1. usenet setup
sudo apt-get install sabnzbdplus

########################################
#1. Check micro SD space
df <disk freespace>
df -h <human readable>
df -BM <block size per unit 1,048,576 bytes>
df -H <print sizes in powers of 1000>
df -a <all include dummy file systems>
df --total <grand total

######################################## ########################################

https://www.raspberrypi.org/forums/viewtopic.php?f=78&t=52261#

7-1. keitzer
How far is the load getting? is it detecting the controller on boot?

Type - sudo apt-get install xboxdrv
This gets the drivers
Now you have to change the rc.local so the RPi detects the controller
Type - sudo nano /etc/rc.local
Now add the text as described 
Then press left ctrl+X
It will ask you if you want to make changes to the file
Press 'y' (yes)
Then press Enter
Then Type - sudo reboot
The RPi will reboot and 'hopefully' the controller is now detected
"The list of things I have heard now contains everything!"

7-2. #!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

xboxdrv --trigger-as-button --id 0 --led 2 --deadzone 4000 --silent &
sleep 1
exit 0
